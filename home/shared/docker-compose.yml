version: "3"
services:
  uscitibot:
    build:
      context: /home/shared/.config/uscitibot
      dockerfile: Dockerfile
    image: buonhobo/uscitibot:latest
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    container_name: uscitibot
    network_mode: 'host'
    volumes:
      - /home/shared/.config/uscitibot:/uscitibot
    deploy:
      restart_policy:
        delay: 180s
        condition: on-failure
    restart: unless-stopped
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    hostname: minipc
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
      - JELLYFIN_PublishedServerUrl=192.168.1.137 #optional
    volumes:
      - /home/shared/.config/jellyfin:/config
      - /home/shared/Jellyfin/Shows:/data/tvshows
      - /home/shared/Jellyfin/Movies:/data/movies
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
      - WEBUI_PORT=8080
    volumes:
      - /home/shared/.config/qbittorrent-nox:/config
      - /home/shared:/downloads
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    restart: unless-stopped
    network_mode: "host"
    profiles: ["ngrok"]
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - /home/shared/.config/ngrok.yml:/etc/ngrok.yml
  samba:
    container_name: samba
    image: ghcr.io/servercontainers/samba
    restart: unless-stopped
    network_mode: host
    volumes:
      - /home/shared:/shares/
    environment:
      SAMBA_CONF_LOG_LEVEL: 3
      WSDD2_DISABLE: 1
      AVAHI_DISABLE: 1
      NETBIOS_DISABLE: 1
      GROUP_users: 1000
      ACCOUNT_buonhobo: assword
      UID_buonhobo: 1000
      GROUPS_buonhobo: users

      SAMBA_VOLUME_CONFIG_shared: "[shared]; path = /shares; writeable = yes; readable yes; force user = buonhobo; force group = users; create mask = 755; directory mask = 755;"
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    volumes:
      - /home/shared/.config/sonarr:/config
      - /home/shared/Jellyfin/Shows:/tv #optional
      - /home/shared/Downloads:/downloads #optional
    ports:
      - 8989:8989
    restart: unless-stopped
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    volumes:
      - /home/shared/.config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    volumes:
      - /home/shared/.config/radarr:/config
      - /home/shared/Jellyfin/Movies:/movies #optional
      - /home/shared/Downloads:/downloads #optional
    ports:
      - 7878:7878
    restart: unless-stopped
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    volumes:
      - /home/shared/.config/bazarr:/config
      - /home/shared/Jellyfin/Movies:/movies #optional
      - /home/shared/Jellyfin/Shows:/tv #optional
    ports:
      - 6767:6767
    restart: unless-stopped
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Rome
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
